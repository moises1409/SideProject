version: '3.8'
services:
  angularapp:
    container_name: angularapp
    image: angularapp:1.0.0
    build:
      context: ./frontend
      dockerfile: angular.dockerfile
    ports:
      - "3000:80"
    depends_on:
      - flaskapp

  flaskapp:
    container_name: flaskapp
    image: flaskapp:1.0.0
    build:
      context: ./backend
      dockerfile: flask.dockerfile
    env_file:
      - ./backend/.env  # Updated path to .env file
    ports:
      - "4000:4000"
    depends_on:
      - celery_worker
      - db
      - redis

  celery_worker:
    container_name: celery_worker
    image: flaskapp:1.0.0
    build:
      context: ./backend
      dockerfile: flask.dockerfile
    env_file:
      - ./backend/.env  # Updated path to .env file
    command: celery -A app.celery worker --loglevel=info
    depends_on:
      - redis
  
  redis:  # Redis service
    container_name: redis
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  
  db:
    container_name: db
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  
volumes:
  pgdata: {}
  redis_data: {}